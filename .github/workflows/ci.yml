on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - run: cargo hack check --each-feature --clean-per-run

  check-examples:
    name: Check (examples)

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - run: cargo hack check --each-feature --clean-per-run --examples

  clippy:
    name: Clippy

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - run: cargo hack clippy --each-feature --clean-per-run -- -D warnings

  clippy-examples:
    name: Clippy (examples)

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - run: cargo hack clippy --each-feature --clean-per-run --examples -- -D warnings

  example:
    name: example
    needs: [ check, check-examples, clippy, clippy-examples ]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        example: [
          rustdoc_version,
          rustdoc_publish_subscribe,
          rustdoc_request_reply,
          rustdoc_request_router,
          rustdoc_dealer_reply,
        ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - run: cargo run --release --verbose --example ${{ matrix.example }}

  build:
    name: build
    needs: [ check, clippy ]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - run: cargo build --release --verbose
      - name: Provide build artifacts
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_rcon_${{ matrix.os }}.zip
          path: target/release/ql_zmq_rcon
      - name: Provide build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_rcon_${{ matrix.os }}.zip
          path: target/release/ql_zmq_rcon.exe
      - name: Provide build artifacts
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_stats_${{ matrix.os }}.zip
          path: target/release/ql_zmq_stats
      - name: Provide build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ql_zmq_stats_${{ matrix.os }}.zip
          path: target/release/ql_zmq_stats.exe
